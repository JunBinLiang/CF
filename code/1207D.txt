// Don't place your source in a package
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;


// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(System.out);

        int T=1;
        for(int t=0;t<T;t++){
            int n=Int();
            int A[][]=new int[n][2];
            for(int i=0;i<n;i++){
                A[i][0]=Int();
                A[i][1]=Int();
            }


            Solution sol=new Solution(out);
            sol.solution(A);
        }
        out.flush();

    }


    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}






class Solution{
    PrintWriter out;
    public Solution(PrintWriter out){
        this.out=out;
    }




    int mod=998244353;
    public void solution(int A[][]){
        int n=A.length;
        long f[]=new long[n+10];
        f[0]=f[1]=1;
        for(int i=2;i<f.length;i++){
            f[i]=f[i-1]*i;
            f[i]%=mod;
        }

        long res=f[n];
        long sum1=1,sum2=1;


        Arrays.sort(A,(a,b)->{
            return a[1]-b[1];
        });

        for(int i=0;i<A.length;i++){
            int j=i;
            int cnt=0;
            while(j<A.length&&A[j][1]==A[i][1]){
                j++;cnt++;
            }
            sum2=sum2*f[cnt];
            sum2%=mod;
            i=j-1;
        }


        Arrays.sort(A,(a,b)->{
            return a[0]-b[0];
        });

        for(int i=0;i<A.length;i++){
            int j=i;
            int cnt=0;
            while(j<A.length&&A[j][0]==A[i][0]){
                j++;cnt++;
            }
            sum1=sum1*f[cnt];
            sum1%=mod;
            i=j-1;
        }



        long sum3=1;
        int pre=-1;
        for(int i=0;i<A.length;i++){
            int j=i;
            while(j<A.length&&A[j][0]==A[i][0]){
                j++;
            }

            int mn=Integer.MAX_VALUE;
            int mx=-1;
            Map<Integer,Integer>ff=new HashMap<>();
            for(int k=i;k<j;k++){
                mn=Math.min(mn,A[k][1]);
                mx=Math.max(mx,A[k][1]);
                if(!ff.containsKey(A[k][1])){
                    ff.put(A[k][1],1);
                }
                else{
                    ff.put(A[k][1],ff.get(A[k][1])+1);
                }
            }

            if(mn<pre){
                sum3=0;
                break;
            }
            pre=mx;
            for(Integer key:ff.keySet()){
                int cnt=ff.get(key);
                sum3*=f[cnt];
                sum3%=mod;
            }
            i=j-1;
        }

        /*System.out.println(res);
        System.out.println(sum1);
        System.out.println(sum2);
        System.out.println(sum3);*/

        res-=((sum1+sum2)%mod);
        if(res<0)res+=mod;
        res+=sum3;
        res%=mod;
        out.println(res);
    }






}



/*
                             ;\
                            |' \
         _                  ; : ;
        / `-.              /: : |
       |  ,-.`-.          ,': : |
       \  :  `. `.       ,'-. : |
        \ ;    ;  `-.__,'    `-.|
         \ ;   ;  :::  ,::'`:.  `.
          \ `-. :  `    :.    `.  \
           \   \    ,   ;   ,:    (\
            \   :., :.    ,'o)): ` `-.
           ,/,' ;' ,::"'`.`---'   `.  `-._
         ,/  :  ; '"      `;'          ,--`.
        ;/   :; ;             ,:'     (   ,:)
          ,.,:.    ; ,:.,  ,-._ `.     \""'/
          '::'     `:'`  ,'(  \`._____.-'"'
             ;,   ;  `.  `. `._`-.  \\
             ;:.  ;:       `-._`-.\  \`.
              '`:. :        |' `. `\  ) \
      -hrr-      ` ;:       |    `--\__,'
                   '`      ,'
                        ,-'


                      free bug dog
*/





