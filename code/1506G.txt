// Don't place your source in a package
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;


// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {//scanner from SecondThread
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(System.out);



        int T=Int();
        for(int t=0;t<T;t++){
            String s=Str();

            Solution sol=new Solution();
            sol.solution(out,s);
        }
        out.flush();

    }

    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}



class Solution{

    public void solution(PrintWriter out,String s){
        StringBuilder str=new StringBuilder();
        Stack<Character>stack=new Stack<>();
        char A[]=s.toCharArray();
        int t[]=new int[26];
        int f[]=new int[26];

        for(int i=0;i<A.length;i++){
            t[A[i]-'a']++;
        }

        for(int i=0;i<A.length;i++){
            if(f[A[i]-'a']!=0){
                t[A[i]-'a']--;
                continue;
            }
            if(stack.size()==0){
                stack.push(A[i]);
            }
            else{
                while(stack.size()>0&&A[i]>stack.peek()&&t[stack.peek()-'a']>0){
                    f[stack.pop()-'a']--;
                }
                stack.push(A[i]);
            }
            //System.out.println(i+" "+stack);
            f[A[i]-'a']++;
            t[A[i]-'a']--;
        }

        char B[]=new char[stack.size()];
        int j=B.length-1;
        while(stack.size()!=0){
            B[j]=stack.pop();
            j--;
        }

        Arrays.fill(f,0);
        for(int i=0;i<B.length;i++){
            char c=B[i];
            if(f[c-'a']!=0)continue;
            str.append(c+"");
            f[c-'a']++;
        }

        out.println(str.toString());
    }


}


