// Don't place your source in a package
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;






// Please name your class Main
public class Main {
    static Scanner in = new Scanner(System.in);
    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(System.out);

        int T=Int();
        for(int t=0;t<T;t++){
            int n=Int();
            int m=Int();
            int A[][]=new int[n][2];

            for(int i=0;i<n;i++){
                A[i][0]=Int();
            }

            for(int i=0;i<n;i++){
                A[i][1]=Int();
            }

            Solution sol=new Solution();
            sol.solution(out,A,m);

        }
        out.flush();

    }

    public static long Long(){
        return in.nextLong();
    }
    public static int Int(){
        return in.nextInt();
    }
    public static String Str(){
        return in.next();
    }
}


class Solution{
    List<Integer>one=new ArrayList<>();
    List<Integer>two=new ArrayList<>();
    long pre[];
    public void solution(PrintWriter out,int A[][],int m){
        if(m==0){
            System.out.println(0);
            return;
        }
        int l=1,r=0;
        for(int i=0;i<A.length;i++){
            r+=A[i][1];

            if(A[i][1]==1){
                one.add(A[i][0]);
            }
            else{
                two.add(A[i][0]);
            }
        }

        Collections.sort(one,(a,b)->{
            return b-a;
        });

        Collections.sort(two,(a,b)->{
            return b-a;
        });


        pre=new long[two.size()];
        long sum=0;
        for(int i=0;i<pre.length;i++){
            sum+=two.get(i);
            pre[i]=sum;
        }


        int res=-1;
        while(l<=r){
            int mid=l+(r-l)/2;
            if(check(A,mid,m)){
                res=mid;
                r=mid-1;
            }
            else{
                l=mid+1;
            }
        }
        System.out.println(res);

    }

    public boolean check(int A[][],int mid,int m){
        if(two.size()>0&&((mid/2)-1)>=0&&pre[Math.min((mid/2)-1,pre.length-1)]>=m){
            return true;
        }


        long sum=0;
        for(int i=0;i<one.size();i++){
            sum+=one.get(i);
            mid--;
            if(sum>=m){
                return true;
            }
            if(mid==0)break;


            if(two.size()>0&&((mid/2)-1)>=0&&pre[Math.min((mid/2)-1,pre.length-1)]+sum>=m){
                return true;
            }
        }
        return false;
    }



}

