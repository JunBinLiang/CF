// Don't place your source in a package
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;








// Please name your class Main
public class Main {

    static class FastScanner {//scanner from SecondThread
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(System.out);
        FastScanner fs=new FastScanner();
        int T=1;
        for(int t=0;t<T;t++){
            int n = fs.Int();int z=fs.Int();
            int A[]=new int[n];
            for(int i=0;i<n;i++){
                A[i]=fs.Int();
            }


            Solution sol=new Solution();
            sol.solution(out,A,z);
        }
        out.flush();

    }

}



class Solution{

    public void solution(PrintWriter out,int A[],int z){
        sort(A);
        int res=0;

        int l=1,r=A.length-1;

        while(l<=r){
            int mid=l+(r-l)/2;
            if(check(A,mid,z)){
                res=mid;
                l=mid+1;
            }
            else{
                r=mid-1;
            }
        }
        out.println(res);
    }

    public boolean check(int A[],int mid,int z){
        if(mid>A.length/2+2)return false;

        int j=mid;

        for(int i=0;i<mid;i++){
            while(j<A.length&&A[j]-A[i]<z){
                j++;
            }
            if(j>=A.length){
                return false;
            }
            //found a match
            j++;
        }
        return true;
    }

    public void sort(int A[]){
        PriorityQueue<Integer>pq=new PriorityQueue<>();
        for(int i:A)pq.add(i);

        for(int i=0;i<A.length;i++){
            A[i]=pq.poll();
        }
    }


}

