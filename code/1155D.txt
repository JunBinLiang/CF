// Don't place your source in a package
import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("input.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");

        int T=1;
        for(int t=0;t<T;t++){
            int n=Int();
            int x=Int();
            long A[]=new long[n];
            for(int i=0;i<n;i++)A[i]=Int();
            Solution sol=new Solution(out);
            sol.solution(A,x);
        }
        out.close();

    }

    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution{
    PrintWriter out;
    int INF=Integer.MAX_VALUE;
    int MOD=1000000007;
    public Solution(PrintWriter out){
        this.out=out;
    }


    public void solution(long A[],int x) {
        int N=A.length;
        long dp[][]=new long[N][3];//not use,using,finish

        dp[0][0]=Math.max(0,A[0]);
        dp[0][1]=Math.max(0,A[0]*x);
        dp[0][2]=Math.max(0,A[0]);

        for(int i=1;i<A.length;i++){
            long cur=A[i];
            //not use
            dp[i][0]=Math.max(dp[i][0],cur+dp[i-1][0]);
            //using it
            dp[i][1]=Math.max(dp[i][1],Math.max(dp[i-1][0]+cur*x,dp[i-1][1]+cur*x));
            //have use
            dp[i][2]=Math.max(dp[i][2],Math.max(dp[i-1][1]+cur,dp[i-1][2]+cur));
        }


        long res=0;
        for(int i=0;i<dp.length;i++){
            for(int j=0;j<3;j++){
                res=Math.max(res,dp[i][j]);
            }
        }
        out.println(res);
    }


}













