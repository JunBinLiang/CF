// Don't place your source in a package
import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;


// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));

        int T=Int();
        for(int t=0;t<T;t++){
            int n=Int(),m=Int();
            char A[][]=new char[n][m];
            for(int i=0;i<n;i++){
                String s=Str();
                for(int j=0;j<m;j++){
                    A[i][j]=s.charAt(j);
                }
            }

            Solution sol=new Solution(out);
            sol.solution(A);
        }
        out.close();

    }


    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}






class Solution{
    PrintWriter out;
    public Solution(PrintWriter out){
        this.out=out;
    }





    public void solution(char A[][]){
        int n=A.length,m=A[0].length;
        List<int[]>f[]=new ArrayList[26];
        for(int i=0;i<f.length;i++){
            f[i]=new ArrayList<>();
        }

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(A[i][j]=='.')continue;
                f[A[i][j]-'a'].add(new int[]{i,j});
            }
        }

        for(List<int[]>list:f){
            if(!check(list)){
                out.println("NO");
                return;
            }
        }

        int j=25;
        while(j>=0&&f[j].size()==0){
            j--;
        }

        List<int[]>res=new ArrayList<>();
        while(j>=0){
            List<int[]>cur=f[j];
            char c=(char)(j+'a');

            if(cur.size()==0){
                res.add(res.get(res.size()-1));
            }
            else{
                int pos1[]=cur.get(0);
                int pos2[]=cur.get(cur.size()-1);

                for(int i=pos1[0];i<=pos2[0];i++){
                    for(int k=pos1[1];k<=pos2[1];k++){
                        if(A[i][k]=='#')continue;
                        if(A[i][k]==c){
                            A[i][k]='#';
                        }
                        else{
                            out.println("NO");
                            return;
                        }
                    }
                }
                res.add(new int[]{pos1[0],pos1[1],pos2[0],pos2[1]});
            }
            j--;
        }
        Collections.reverse(res);
        print(res);
    }

    public void print(List<int[]>res){
        out.println("YES");
        out.println(res.size());
        for(int p[]:res){
            out.println((p[0]+1)+" "+(p[1]+1)+" "+(p[2]+1)+" "+(p[3]+1));
        }
    }



    public boolean check(List<int[]>list){
        if(list.size()<2)return true;

        if(list.get(1)[0]==list.get(0)[0]){
            for(int i=2;i<list.size();i++){
                if(list.get(i)[0]!=list.get(i-1)[0])return false;
            }
            return true;
        }
        else if(list.get(1)[1]==list.get(0)[1]){
            for(int i=2;i<list.size();i++){
                if(list.get(i)[1]!=list.get(i-1)[1])return false;
            }
            return true;
        }
        else{
            return false;
        }
    }


}












/*
                             ;\
                            |' \
         _                  ; : ;
        / `-.              /: : |
       |  ,-.`-.          ,': : |
       \  :  `. `.       ,'-. : |
        \ ;    ;  `-.__,'    `-.|
         \ ;   ;  :::  ,::'`:.  `.
          \ `-. :  `    :.    `.  \
           \   \    ,   ;   ,:    (\
            \   :., :.    ,'o)): ` `-.
           ,/,' ;' ,::"'`.`---'   `.  `-._
         ,/  :  ; '"      `;'          ,--`.
        ;/   :; ;             ,:'     (   ,:)
          ,.,:.    ; ,:.,  ,-._ `.     \""'/
          '::'     `:'`  ,'(  \`._____.-'"'
             ;,   ;  `.  `. `._`-.  \\
             ;:.  ;:       `-._`-.\  \`.
              '`:. :        |' `. `\  ) \
      -hrr-      ` ;:       |    `--\__,'
                   '`      ,'
                        ,-'


                      free bug dog
*/


