// Don't place your source in a package
import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //BufferedReader in = new BufferedReader(new InputStreamReader(System.in));

        //reading /writing file
        //Scanner sc=new Scanner(new File("input.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");


        int T=Int();
        for(int t=0;t<T;t++){
            int n=Int();
            int A[]=Arr(n);
            Solution sol=new Solution(out);
            sol.solution(A,t);
        }
        out.close();

    }

    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution{
    PrintWriter out;
    public Solution(PrintWriter out){
        this.out=out;
    }


    public void solution(int A[],int t){
        //if(t==381)System.out.println(Arrays.toString(A));
        if(check(A)){//no swap
            out.println("YES");
            return;
        }

        long odd=0,even=0;
        for(int i=0;i<A.length;i++){
            if(i%2==0)even+=A[i];
            else odd+=A[i];
        }
        long dif=Math.abs(odd-even);

        //odd must equal to even => can only swap with 1 specific number
        if(odd==even||dif%2==1){//can only swap to the same number, no effect at all
            out.println("NO");
            return;
        }



        long l[]=new long[A.length];
        long r[]=new long[A.length];
        long lmin[][]=new long[A.length][2];
        long rmin[][]=new long[A.length][2];
        boolean ll[]=new boolean[A.length];
        boolean rr[]=new boolean[A.length];
        long pre=0;boolean flag=true;
        long e=0,o=0;
        for(int i=0;i<A.length;i++){
            pre=A[i]-pre;
            l[i]=pre;
            if(pre<0) flag=false;
            ll[i]=flag;
        }

        pre=0;flag=true;
        for(int i=A.length-1;i>=0;i--){
            pre=A[i]-pre;
            r[i]=pre;
            if(pre<0)flag=false;
            rr[i]=flag;
        }

        long mn1=Long.MAX_VALUE;long mn2=Long.MAX_VALUE;
        for(int i=A.length-1;i>=0;i--){
            if(i%2==0)mn1=Math.min(mn1,l[i]);
            else mn2=Math.min(mn2,l[i]);
            rmin[i][0]=mn1;//even
            rmin[i][1]=mn2;//odd
        }

        mn1=Long.MAX_VALUE;mn2=Long.MAX_VALUE;
        for(int i=0;i<A.length;i++){
            if(i%2==0)mn1=Math.min(mn1,r[i]);
            else mn2=Math.min(mn2,r[i]);
            lmin[i][0]=mn1;//even
            lmin[i][1]=mn2;//odd
        }

        

        for(int i=0;i<A.length-1;i++){//swap (i,i+1),only swap adjecent
            if(even>odd){
                if(i%2==0){
                    if(A[i]-A[i+1]!=dif/2)continue;
                }
                else{
                    if(A[i+1]-A[i]!=dif/2)continue;
                }
            }
            else{
                if(i%2==1){
                    if(A[i]-A[i+1]!=dif/2)continue;
                }
                else{
                    if(A[i+1]-A[i]!=dif/2)continue;
                }
            }


            if(!get2(ll,i-1)||!get2(rr,i+2))continue;

            //can swap
            boolean good=true;
            if(even>odd){//decrease even,increase odd
                if(i+2<A.length){
                    long mn=rmin[i+2][0];
                    if(mn-dif<0)continue;
                    if(A[i]<r[i+2])continue;
                }
                if(i-1>=0){
                    long mn=lmin[i-1][0];
                    if(mn-dif<0)continue;
                    if(A[i+1]<l[i-1])continue;
                }
            }
            else{
                if(i+2<A.length){
                    long mn=rmin[i+2][1];
                    if(mn-dif<0)continue;
                    if(A[i]<r[i+2])continue;
                }
                if(i-1>=0){
                    long mn=lmin[i-1][1];
                    if(mn-dif<0)continue;
                    if(A[i+1]<l[i-1])continue;
                }
            }

            if(good){
                out.println("YES");
                return;
            }
        }




        out.println("NO");
    }

    public int get1(int A[],int i){
        if(i<0||i>=A.length)return 0;
        return A[i];
    }

    public boolean get2(boolean A[],int i){
        if(i<0||i>=A.length)return true;
        return A[i];
    }



    public boolean check(int A[]){
        int pre=0;
        for(int i=0;i<A.length;i++){
            pre=A[i]-pre;
            if(pre<0)return false;
        }
        return pre==0;
    }


}











/*
                             ;\
                            |' \
         _                  ; : ;
        / `-.              /: : |
       |  ,-.`-.          ,': : |
       \  :  `. `.       ,'-. : |
        \ ;    ;  `-.__,'    `-.|
         \ ;   ;  :::  ,::'`:.  `.
          \ `-. :  `    :.    `.  \
           \   \    ,   ;   ,:    (\
            \   :., :.    ,'o)): ` `-.
           ,/,' ;' ,::"'`.`---'   `.  `-._
         ,/  :  ; '"      `;'          ,--`.
        ;/   :; ;             ,:'     (   ,:)
          ,.,:.    ; ,:.,  ,-._ `.     \""'/
          '::'     `:'`  ,'(  \`._____.-'"'
             ;,   ;  `.  `. `._`-.  \\
             ;:.  ;:       `-._`-.\  \`.
              '`:. :        |' `. `\  ) \
      -hrr-      ` ;:       |    `--\__,'
                   '`      ,'
                        ,-'


                      free bug dog
*/

//[111111111 444444444 111111111 222222222 222222222]
