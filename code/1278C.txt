// Don't place your source in a package
import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;


// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));

        int T=Int();
        for(int t=0;t<T;t++){
            int n=Int();
            int A[]=new int[2*n];
            for(int i=0;i<A.length;i++){
                A[i]=Int();
            }
            Solution sol=new Solution(out);
            sol.solution(A);
        }
        out.close();

    }


    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}






class Solution{
    PrintWriter out;
    public Solution(PrintWriter out){
        this.out=out;
    }





    public void solution(int A[]){
        int n=A.length/2;
        int res=A.length;
        int red=0,blue=0;
        int left[][]=new int[n][2];
        for(int i=0;i<n;i++){
            if(A[i]==1)red++;
            else blue++;
            left[i][0]=red;
            left[i][1]=blue;
            if(red==blue){
                res=Math.min(res,n+n-(i+1));
            }
        }


        Map<Integer,Integer>f=new HashMap<>();
        red=0;blue=0;
        for(int i=A.length-1;i>=n;i--){
            if(A[i]==1)red++;
            else blue++;
            int dif=red-blue;
            f.put(dif,i);
            if(dif==0){
                res=Math.min(res,i);
            }
        }

        for(int i=0;i<left.length;i++){
            int a=left[i][0];
            int b=left[i][1];
            int dif=b-a;

            if(f.containsKey(dif)){
                int j=f.get(dif);
                res=Math.min(res,j-n+(n-(i+1)));
            }
        }




        out.println(res);
    }










}










/*
                             ;\
                            |' \
         _                  ; : ;
        / `-.              /: : |
       |  ,-.`-.          ,': : |
       \  :  `. `.       ,'-. : |
        \ ;    ;  `-.__,'    `-.|
         \ ;   ;  :::  ,::'`:.  `.
          \ `-. :  `    :.    `.  \
           \   \    ,   ;   ,:    (\
            \   :., :.    ,'o)): ` `-.
           ,/,' ;' ,::"'`.`---'   `.  `-._
         ,/  :  ; '"      `;'          ,--`.
        ;/   :; ;             ,:'     (   ,:)
          ,.,:.    ; ,:.,  ,-._ `.     \""'/
          '::'     `:'`  ,'(  \`._____.-'"'
             ;,   ;  `.  `. `._`-.  \\
             ;:.  ;:       `-._`-.\  \`.
              '`:. :        |' `. `\  ) \
      -hrr-      ` ;:       |    `--\__,'
                   '`      ,'
                        ,-'


                      free bug dog
*/


