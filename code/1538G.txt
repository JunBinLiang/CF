// Don't place your source in a package
import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("input.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");

        int T=Int();
        for(int t=0;t<T;t++){
            long x=Long();
            long y=Long();
            long a=Long();
            long b=Long();
            Solution sol=new Solution(out);
            sol.solution(Math.min(x,y),Math.max(x,y),Math.min(a,b),Math.max(a,b),t);
        }
        out.close();

    }

    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution{
    PrintWriter out;
    int INF=Integer.MAX_VALUE;
    int MOD=1000000007;
    public Solution(PrintWriter out){
        this.out=out;
    }


    public void solution(long x,long y,long a,long b,int t){
        if(a==b){
            out.println(Math.min(x,y)/a);
            return;
        }
        long l=0,r=2000000000;
        long res=0;
        while(l<=r){
            long mid=l+(r-l)/2;
            long left=(y-b*mid)/(a-b);
            long right=(x-a*mid)/(b-a);
            long dif=right-left;
            if(Math.max(0,Math.ceil((y-b*mid+0.0)/(a-b)))<=Math.min(mid,Math.floor((x-a*mid+0.0)/(b-a)))){
                res=mid;
                l=mid+1;
            }
            else{
                r=mid-1;
            }
        }
        out.println(res);
    }

}

