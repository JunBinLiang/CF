// Don't place your source in a package
import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //BufferedReader in = new BufferedReader(new InputStreamReader(System.in));

        //reading /writing file
        //Scanner sc=new Scanner(new File("input.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");


        int T=1;
        for(int t=0;t<T;t++){
            int n=Int();int k=Int();
            int A[]=new int[n];
            for(int i=0;i<n;i++){
                A[i]=Int();
            }

            Solution sol=new Solution(out);
            sol.solution(A,k);
        }
        out.close();

    }

    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution{
    PrintWriter out;
    int INF=Integer.MAX_VALUE;
    int MOD=1000000007;
    public Solution(PrintWriter out){
        this.out=out;
    }



    public void solution(int A[],int k){

        long f[]=new long[11];
        long res=0;
        f[0]=1;
        for(int i=1;i<f.length;i++){
            f[i]=10*f[i-1];
        }

        Map<Integer,Integer>maps[]=new HashMap[11];
        Arrays.setAll(maps,e->new HashMap<>());

        for(int i=0;i<A.length;i++){
            for(int j=1;j<f.length;j++){
                int self=(int)(((A[i]%k)*(f[j]%k))%k);
                put(maps[j],self);
            }
        }


        for(int i=0;i<A.length;i++){
            long cur=A[i];
            int mod=(int)(A[i]%k);
            int len=len(A[i]);
            Map<Integer,Integer>map=maps[len];
            int self=(int)(((A[i]%k)*(f[len]%k))%k);
            int key=(int)((k-mod)%k);
            if(map.containsKey(key)){
                res+=map.get(key);
            }
            if((self+mod)%k==0)res--;
        }
        out.println(res);
    }

    static int len(int x){
        int ans = 0;
        while(x>0){
            ans++;
            x/=10;
        }
        return ans;
    }

    public void put(Map<Integer,Integer>f,int key){
        if(!f.containsKey(key))f.put(key,1);
        else f.put(key,f.get(key)+1);
    }

    public void del(Map<Integer,Integer>f,int key){
        f.put(key,f.get(key)-1);
        if(f.get(key)==0)f.remove(key);
    }

}






