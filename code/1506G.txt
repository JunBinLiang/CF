// Don't place your source in a package
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;


// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {//scanner from SecondThread
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(System.out);



        int T=Int();
        for(int t=0;t<T;t++){
            int n=Int();
            int A[][]=new int[n][2];
            for(int i=0;i<n;i++){
                A[i][0]=Int();
            }
            for(int i=0;i<n;i++){
                A[i][1]=Int();
            }

            Solution sol=new Solution();
            sol.solution(out,A);
        }
        out.flush();

    }

    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}



class Solution{

    public void solution(PrintWriter out,int A[][]){
        Arrays.sort(A,(a,b)->{
            return a[0]-b[0];
        });
        long res=0;
        int pr=1,pc=1;
        for(int i=0;i<A.length;i++){
            int r=A[i][0],c=A[i][1];
            int difr=r-pr; int difc=c-pc;
            int stop=difr-difc;
            if(difr==difc){
                if(even(r,c)){
                    res+=difr;
                }
                else{
                    res+=0;
                }
            }
            else{
                if(even(pr,pc)){
                    stop--;
                    res=res+(stop/2)+(stop%2);
                }
                else{
                    res=res+(stop/2)+(stop%2);
                }

            }
            pr=r;pc=c;
        }
        out.println(res);
    }

    public boolean even(int a,int b){
        return (a+b)%2==0;
    }
}


