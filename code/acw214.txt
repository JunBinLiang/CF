// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("input.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");



        int T=1;
        for(int t=0;t<T;t++){
            int n=Int();
            long m=Long();
            long A[]=new long[n];
            for(int i=0;i<n;i++){
                A[i]=Long();
            }

            Solution sol=new Solution(out);
            sol.solution(A,m);
        }
        out.close();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int MOD = 1000000007;
    int mod = MOD;
    public Solution(PrintWriter out) {
        this.out = out;
    }


    long inv[];
    public void solution(long A[],long M) {
        //x0 + x1 + ... = M
        int N = A.length;
        inv=new long[25];
        inv[0]=1;
        inv[1]=1;
        for (int i=2;i<inv.length;i++){
            inv[i]=inv[mod%i]*(mod-mod/i)%mod;
        }


        long res = C(N+M-1,N-1);//M ball into 20 boxs
        //System.out.println((N+M-1)+"  "+(N-1)+"  "+res);

        for(int state=1;state<(1<<N);state++){
            int sign = 1;
            long take = N+M-1;
            for(int i = 0;i<N;i++){
                if((state&(1<<i))!=0){
                    sign *= -1;
                    take-=(A[i]+1);
                }
            }
            //System.out.println(Integer.toBinaryString(state)+"   "+C(take,N-1));
            res=res+sign*C(take,N-1);
            res=(res+mod)%mod;
        }
        out.println(res);
    }

    public long C(long n,long r) {
        if(n<r)return 0;
        long ret=1;
        for (long i=n-r+1;i<=n;i++)
            ret=(ret*(i%mod))%mod;
        for (int i=1;i<=r;i++)
            ret=(ret*inv[i])%mod;
        return ret;
    }




}



















