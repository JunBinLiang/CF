// Don't place your source in a package
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;








// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {//scanner from SecondThread
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(System.out);
        int T=Int();
        for(int t=0;t<T;t++){

            int n=Int();

            Solution sol=new Solution();
            sol.solution(out,n);
        }
        out.flush();

    }

    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}



class Solution{
    public void solution(PrintWriter out,int n){
        int res[]=new int[n+1];
        int i=1;
        PriorityQueue<int[]>pq=new PriorityQueue<>((a,b)->{
           int len1=a[1]-a[0]+1;
           int len2=b[1]-b[0]+1;
           if(len1==len2)return a[0]-b[0];
           return len2-len1;
        });


        pq.add(new int[]{1,n});

        while(pq.size()>0){
            int top[]=pq.poll();
            int l=top[0],r=top[1];
            if(l>r){
                continue;
            }
            int cnt=r-l+1;

            if(cnt%2==1){
                int mid=(l+r)/2;
                res[mid]=i++;
                pq.add(new int[]{l,mid-1});
                pq.add(new int[]{mid+1,r});
            }
            else{
                int mid=(l+r-1)/2;
                res[mid]=i++;
                pq.add(new int[]{l,mid-1});
                pq.add(new int[]{mid+1,r});
            }

        }

        for(int j=1;j<res.length;j++){
            out.print(res[j]+" ");
        }
        out.println();
    }



}


