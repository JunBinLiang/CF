// Don't place your source in a package
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;








// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {//scanner from SecondThread
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(System.out);
        int T=Int();
        for(int t=0;t<T;t++){
            int n=Int();
            int A[]=new int[n];
            for(int i=0;i<n;i++){
                A[i]=Int();
            }

            Sol sol=new Sol();
            sol.solution(out,A);
        }
        out.flush();

    }

    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}



class Sol{

    public void solution(PrintWriter out,int A[]){
        Map<Integer,Integer>f=new HashMap<>();
        int mx=0;
        int cnt=0;
        for(int i:A){
            if(!f.containsKey(i)){
                f.put(i,1);
            }
            else{
                f.put(i,f.get(i)+1);
            }
            mx=Math.max(mx,f.get(i));
        }


        for(Integer key:f.keySet()){
            if(f.get(key)==mx){
                cnt++;
            }
        }

        int remain=A.length-cnt*mx;
        int interval=mx-1;
        int res=remain/interval;

        res+=(cnt-1);
        out.println(res);

    }





}
