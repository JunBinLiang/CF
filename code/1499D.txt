// Don't place your source in a package
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;


// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {//scanner from SecondThread
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(System.out);

        int p[]=new int[20000050];
        for(int i=2;i<p.length;i++){
            if(p[i]!=0)continue;
            for(int j=i;j<p.length;j+=i){
                p[j]++;
            }
        }


        int T=1;
        for(int t=0;t<T;t++){
            int n=Int();
            int A[][]=new int[n][3];

            for(int i=0;i<A.length;i++){
                A[i][0]=Int();
                A[i][1]=Int();
                A[i][2]=Int();
            }

            Sol sol=new Sol();
            sol.solution(out,p,A);
        }
        out.flush();

    }

    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}



class Sol{
    public void solution(PrintWriter out,int primes[],int A[][]){
        for(int i=0;i<A.length;i++){
            int c=A[i][0],d=A[i][1],x=A[i][2];
            long res=0;
            for(int j=1;j*j<=x;j++){
                if(x%j==0){
                    int m1=j;
                    int m2=x/j;
                    if(m1==m2){
                        res+=check(primes,c,d,x,m1);
                    }
                    else{
                        res+=check(primes,c,d,x,m1);
                        res+=check(primes,c,d,x,m2);
                    }
                }
            }
            out.println(res);
        }
    }

    public long check(int p[],int c,int d,int x,int g){
        long res=0;
        if((x/g+d)%c==0){
            int l=(x/g+d)/c;
            int cnt=p[l];
            res+=(1l<<cnt);
        }
        return res;
    }
}








