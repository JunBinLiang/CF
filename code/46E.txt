// Don't place your source in a package
import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //BufferedReader in = new BufferedReader(new InputStreamReader(System.in));

        //reading /writing file
        //Scanner sc=new Scanner(new File("input.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");


        int T=1;
        for(int t=0;t<T;t++){
            int  n=Int();int m=Int();
            int A[][]=new int[n][m];
            for(int i=0;i<n;i++){
                for(int j=0;j<m;j++){
                    A[i][j]=Int();
                }
            }

            Solution sol=new Solution(out);
            sol.solution(A);
        }
        out.close();

    }

    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution{
    PrintWriter out;
    int INF=Integer.MAX_VALUE;
    public Solution(PrintWriter out){
        this.out=out;
    }



    public void solution(int A[][]){
        long res=Long.MIN_VALUE;
        int n=A.length,m=A[0].length;
        long dp[][]=new long[n][m];
        long pre[][]=new long[n][m];

        for(int i=0;i<n;i++){
            long sum=0;
            for(int j=0;j<m;j++){
                sum+=A[i][j];
                pre[i][j]=sum;
                dp[i][j]=Long.MIN_VALUE;
            }
        }


        for(int i=0;i<m;i++){
            dp[0][i]=pre[0][i];
        }
        for(int i=m-2;i>=0;i--){
            dp[0][i]=Math.max(dp[0][i],dp[0][i+1]);
        }

        for(int i=1;i<n;i++){
            for(int j=0;j<m;j++){
                if(i%2==1){
                    if(j==m-1)continue;
                    dp[i][j]=pre[i][j]+dp[i-1][j+1];
                }
                else{
                    if(j==0)continue;
                    dp[i][j]=pre[i][j]+dp[i-1][j-1];
                }
            }
            if(i%2==0){
                for(int j=m-2;j>=0;j--){
                    dp[i][j]=Math.max(dp[i][j],dp[i][j+1]);
                }
            }
            else{
                for(int j=1;j<m;j++){
                    dp[i][j]=Math.max(dp[i][j],dp[i][j-1]);
                }
            }
        }


        for(int i=0;i<m;i++){
            res=Math.max(res,dp[n-1][i]);
        }
        out.println(res);


    }



}








/*
                             ;\
                            |' \
         _                  ; : ;
        / `-.              /: : |
       |  ,-.`-.          ,': : |
       \  :  `. `.       ,'-. : |
        \ ;    ;  `-.__,'    `-.|
         \ ;   ;  :::  ,::'`:.  `.
          \ `-. :  `    :.    `.  \
           \   \    ,   ;   ,:    (\
            \   :., :.    ,'o)): ` `-.
           ,/,' ;' ,::"'`.`---'   `.  `-._
         ,/  :  ; '"      `;'          ,--`.
        ;/   :; ;             ,:'     (   ,:)
          ,.,:.    ; ,:.,  ,-._ `.     \""'/
          '::'     `:'`  ,'(  \`._____.-'"'
             ;,   ;  `.  `. `._`-.  \\
             ;:.  ;:       `-._`-.\  \`.
              '`:. :        |' `. `\  ) \
      -hrr-      ` ;:       |    `--\__,'
                   '`      ,'
                        ,-'


                      free bug dog
*/

