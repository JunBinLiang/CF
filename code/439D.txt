// Don't place your source in a package
import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("input.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");

        int T=1;
        for(int t=0;t<T;t++){
            int n=Int();int m=Int();
            int A[]=Arr(n);
            int B[]=Arr(m);
            Solution sol=new Solution(out);
            sol.solution(A,B);
        }
        out.close();

    }

    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution{
    PrintWriter out;
    int INF=Integer.MAX_VALUE;
    int MOD=1000000007;
    public Solution(PrintWriter out){
        this.out=out;
    }


    public void solution(int A[],int B[]) {


        long res= Long.MAX_VALUE;
        int l=0,r=1000000000;
        while(l<=r){
            int mid=l+(r-l)/2;
            long a=get(A,B,mid);
            long b=get(A,B,mid+1);
            if(a<=b){
                res=Math.min(res,a);
                r=mid-1;
            }
            else{
                l=mid+1;
            }
        }

        out.println(res);

    }

    public long get(int A[],int B[],int mid){
        long sum=0;
        for(int i:A){
            if(i<mid)sum+=(mid-i);
        }
        for(int i:B){
            if(i>mid)sum+=(i-mid);
        }
        return sum;
    }



}











