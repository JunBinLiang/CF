// Don't place your source in a package
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;


// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(System.out);



        int T=Int();
        for(int t=0;t<T;t++){
            int n=Int();int k=Int();
            String s=Str();

            Solution sol=new Solution();
            sol.solution(out,n,k,s);
        }
        out.flush();

    }

    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}



class Solution{
    public void solution(PrintWriter out,int n,int k,String s){
        char A[]=s.toCharArray();
        Arrays.sort(A);
        StringBuilder B[]=new StringBuilder[k];
        for(int i=0;i<k;i++){
            B[i]=new StringBuilder();
            B[i].append(A[i]+"");
        }


        if(k<A.length&&A[k]==A[A.length-1]){
            int j=0;
            if(A[0]==A[k-1]){
                for(int i=k;i<A.length;i++){
                    B[j].append(A[i]+"");
                    j++;
                    j%=k;
                }
            }
            else{
                for(int i=k;i<A.length;i++){
                    B[0].append(A[i]+"");
                }
            }
        }
        else{
            for(int i=k;i<A.length;i++){
                B[0].append(A[i]+"");
            }
        }



        String res=B[0].toString();
        for(int i=1;i<B.length;i++){
            String ss=B[i].toString();
            if(ss.compareTo(res)>0){
                res=ss;
            }
        }
        out.println(res);
    }

}




/*
                             ;\
                            |' \
         _                  ; : ;
        / `-.              /: : |
       |  ,-.`-.          ,': : |
       \  :  `. `.       ,'-. : |
        \ ;    ;  `-.__,'    `-.|
         \ ;   ;  :::  ,::'`:.  `.
          \ `-. :  `    :.    `.  \
           \   \    ,   ;   ,:    (\
            \   :., :.    ,'o)): ` `-.
           ,/,' ;' ,::"'`.`---'   `.  `-._
         ,/  :  ; '"      `;'          ,--`.
        ;/   :; ;             ,:'     (   ,:)
          ,.,:.    ; ,:.,  ,-._ `.     \""'/
          '::'     `:'`  ,'(  \`._____.-'"'
             ;,   ;  `.  `. `._`-.  \\
             ;:.  ;:       `-._`-.\  \`.
              '`:. :        |' `. `\  ) \
      -hrr-      ` ;:       |    `--\__,'
                   '`      ,'
                        ,-'


                      free bug dog
*/


