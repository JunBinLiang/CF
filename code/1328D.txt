// Don't place your source in a package
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;


// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {//scanner from SecondThread
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(System.out);



        int T=Int();
        for(int t=0;t<T;t++){
            int n=Int();
            int A[]=new int[n];
            for(int i=0;i<n;i++){
                A[i]=Int();
            }

            Solution sol=new Solution();
            sol.solution(out,A);
        }
        out.flush();

    }

    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}



class Solution{
    public void solution(PrintWriter out,int A[]){
        //different type can not have same color
        Set<Integer>set=new HashSet<>();
        int n=A.length;
        int res[]=new int[n];
        for(int i:A){
            set.add(i);
        }

        //special cases
        if(set.size()==1){
            Arrays.fill(res,1);
            out.println(1);
            for(int i:res){
                out.print(i+" ");
            }out.println();
            return;
        }

        //

        boolean good=false;
        int k=-1;
        for(int i=0;i<A.length;i++){
            int j=i;int cnt=0;
            while(j<A.length&&A[j]==A[i]){
                j++;cnt++;
            }
            if(cnt>1){
                k=i;
                good=true;
            }
            i=j-1;
        }

        if(!good){//no continuous,just brute force it
            int mx=1;
            res[0]=1;
            for(int i=1;i<A.length;i++){
                if(A[i]==A[i-1]){
                    res[i]=res[i-1];
                }
                else{
                    if(res[i-1]==1)res[i]=2;
                    else res[i]=1;
                    mx=2;
                }
            }

            if(A[0]!=A[res.length-1]){
                if(res[0]==res[res.length-1]){
                    mx=3;
                    res[n-1]=3;
                }
            }
            out.println(mx);
            for(int i:res){
                out.print(i+" ");
            }out.println();
        }
        else{
            int mx=2;
            int j=k;
            while(j<A.length&&A[j]==A[k]){
                res[j]=1;
                j++;
            }

            for(int i=k-1;i>=0;i--){
                if(A[i]==A[i+1]){
                    res[i]=res[i+1];
                }
                else{
                    if(res[i+1]==1)res[i]=2;
                    else res[i]=1;
                }
            }
            for(int i=j;i<A.length;i++){
                if(A[i]==A[i-1]){
                    res[i]=res[i-1];
                }
                else{
                    if(res[i-1]==1)res[i]=2;
                    else res[i]=1;
                }
            }

            if(A[0]!=A[n-1]&&res[0]==res[n-1]){
                j=k;
                while(j<A.length&&A[j]==A[k]){
                    res[j]=1;
                    j++;
                }
                res[j-1]=2;
                for(int i=k-1;i>=0;i--){
                    if(A[i]==A[i+1]){
                        res[i]=res[i+1];
                    }
                    else{
                        if(res[i+1]==1)res[i]=2;
                        else res[i]=1;
                    }
                }
                for(int i=j;i<A.length;i++){
                    if(A[i]==A[i-1]){
                        res[i]=res[i-1];
                    }
                    else{
                        if(res[i-1]==1)res[i]=2;
                        else res[i]=1;
                    }
                }
            }

            out.println(mx);
            for(int i:res){
                out.print(i+" ");
            }out.println();
        }
    }
}




