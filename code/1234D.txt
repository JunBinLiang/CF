// Don't place your source in a package

import java.math.BigInteger;
import java.util.*;
import java.lang.*;
import java.io.*;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(System.out);


        int T=1;
        for(int t=0;t<T;t++){
            String s=Str();
            int m=Int();
            int q[][]=new int[m][3];
            for(int i=0;i<q.length;i++){
                q[i][0]=Int();
                q[i][1]=Int()-1;
                if(q[i][0]==1){
                    q[i][2]=Str().charAt(0)-'a';
                }
                else{
                    q[i][2]=Int()-1;
                }
            }

            Solution sol=new Solution(out);
            sol.solution(s,q);
        }
        out.flush();

    }


    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}






class Solution{
    PrintWriter out;
    public Solution(PrintWriter out){
        this.out=out;
    }


    public void solution(String s,int q[][]){
        int A[]=new int[s.length()];
        for(int i=0;i<s.length();i++){
            A[i]=s.charAt(i)-'a';
        }

        TreeSet<Integer>sets[]=new TreeSet[26];
        for(int i=0;i<sets.length;i++){
            sets[i]=new TreeSet<>();
        }

        for(int i=0;i<A.length;i++){
            sets[A[i]].add(i);
        }

        for(int p[]:q){
            if(p[0]==1){
                int pos=p[1],val=p[2];
                sets[A[pos]].remove(pos);
                A[pos]=val;
                sets[val].add(pos);
            }
            else{
                int cnt=0;
                for(int j=0;j<sets.length;j++){
                    Integer floor=sets[j].floor(p[2]);
                    if(floor!=null&&floor>=p[1]){
                        cnt++;
                    }
                }
                out.println(cnt);
            }
        }

    }




}



/*
                             ;\
                            |' \
         _                  ; : ;
        / `-.              /: : |
       |  ,-.`-.          ,': : |
       \  :  `. `.       ,'-. : |
        \ ;    ;  `-.__,'    `-.|
         \ ;   ;  :::  ,::'`:.  `.
          \ `-. :  `    :.    `.  \
           \   \    ,   ;   ,:    (\
            \   :., :.    ,'o)): ` `-.
           ,/,' ;' ,::"'`.`---'   `.  `-._
         ,/  :  ; '"      `;'          ,--`.
        ;/   :; ;             ,:'     (   ,:)
          ,.,:.    ; ,:.,  ,-._ `.     \""'/
          '::'     `:'`  ,'(  \`._____.-'"'
             ;,   ;  `.  `. `._`-.  \\
             ;:.  ;:       `-._`-.\  \`.
              '`:. :        |' `. `\  ) \
      -hrr-      ` ;:       |    `--\__,'
                   '`      ,'
                        ,-'


                      free bug dog
*/





