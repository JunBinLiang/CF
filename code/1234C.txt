// Don't place your source in a package

import java.math.BigInteger;
import java.util.*;
import java.lang.*;
import java.io.*;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(System.out);


        int T=Int();
        for(int t=0;t<T;t++){
            int n=Int();
            int A[][]=new int[2][n];
            String a=Str();
            String b=Str();
            for(int i=0;i<n;i++){
                A[0][i]=a.charAt(i)-'0';
                if(A[0][i]>2)A[0][i]=2;
                else A[0][i]=1;
            }

            for(int i=0;i<n;i++){
                A[1][i]=b.charAt(i)-'0';
                if(A[1][i]>2)A[1][i]=2;
                else A[1][i]=1;
            }

            Solution sol=new Solution(out);
            sol.solution(A);
        }
        out.flush();

    }


    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}






class Solution{
    PrintWriter out;
    public Solution(PrintWriter out){
        this.out=out;
    }



    public void solution(int A[][]){
        int i=0,j=0;
        int dir=0;//0:right
        if(A[i][j]==2){
            dir=1;//down
        }



        while(true){
            int newi=i;
            int newj=j;
            if(dir==0){//right
                newj++;
                j++;
                if(newi<0||newi>=A.length||newj<0||newj>=A[0].length)break;

                if(A[newi][newj]==1){

                }
                else{
                    if(newi==0)dir=1;
                    else dir=2;
                }
            }
            else if(dir==1){//down
                newi++;
                i++;
                if(newi<0||newi>=A.length||newj<0||newj>=A[0].length)break;
                if(A[newi][newj]==1){

                }
                else{
                    dir=0;
                }
            }
            else if(dir==2){//up
                newi--;
                i--;
                if(newi<0||newi>=A.length||newj<0||newj>=A[0].length)break;
                if(A[newi][newj]==1){

                }
                else{
                    dir=0;
                }
            }
            i=newi;
            j=newj;
        }


        if(i==1&&j==A[0].length){
            out.println("YES");
        }
        else{
            out.println("NO");
        }
    }




}



/*
                             ;\
                            |' \
         _                  ; : ;
        / `-.              /: : |
       |  ,-.`-.          ,': : |
       \  :  `. `.       ,'-. : |
        \ ;    ;  `-.__,'    `-.|
         \ ;   ;  :::  ,::'`:.  `.
          \ `-. :  `    :.    `.  \
           \   \    ,   ;   ,:    (\
            \   :., :.    ,'o)): ` `-.
           ,/,' ;' ,::"'`.`---'   `.  `-._
         ,/  :  ; '"      `;'          ,--`.
        ;/   :; ;             ,:'     (   ,:)
          ,.,:.    ; ,:.,  ,-._ `.     \""'/
          '::'     `:'`  ,'(  \`._____.-'"'
             ;,   ;  `.  `. `._`-.  \\
             ;:.  ;:       `-._`-.\  \`.
              '`:. :        |' `. `\  ) \
      -hrr-      ` ;:       |    `--\__,'
                   '`      ,'
                        ,-'


                      free bug dog
*/





